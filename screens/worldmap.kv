#:import cos math.cos
#:import MapView kivy.garden.mapview.MapView

<MapScreen>:
    mapview: mapview

    FloatLayout:
        WorldMapView:
            id: mapview
            preview_coordinate: None
            add_meeting: False
            #min_zoom: 11
            lat: 48.8534
            lon: 2.3488
            on_add_meeting:
                popup = Factory.AddMeetingMenu()
                popup.coordinate = self.preview_coordinate
                popup.target = self
                popup.tmp_marker = self.tmp_map_marker
                self.add_meeting = False
                popup.open()

        AddMarkerButton:
            pos_hint: {'center': (.05, .95)}

            on_press: mapview.marker_triggered = True

<AddMarkerButton@ImageButton>:
    source: 'data/images/add_marker.png'
    size_hint: None, None
    size: self.texture_size

<AddMeetingMenu>:
    target: None
    tmp_marker: None
    pos_hint: {'x': 1}
    data: [{'level': 1, 'textinput': False, 'values': ['1', '2', '3'], 'title': 'level'}, {'title': 'title', 'multiline': False, 'textinput': True}, {'title': 'comment', 'multiline': True, 'textinput': True}]

    canvas:
        Clear:

    FloatLayout:
        BoxLayout:
            orientation: 'vertical'
            padding: (dp(20),)
            pos_hint: {'top': 1}
            size_hint_y: .8
            on_touch_down:
                touch = args[1]
                root.target.remove_marker(root.tmp_marker)
                if not self.collide_point(*touch.pos): root.dismiss()

            canvas.before:
                Color:
                    a: .1
                Rectangle:
                    pos: self.x, self.y - self.height
                    size: [wh * 4 for wh in self.size]
                Color:
                BorderImage:
                    source: 'data/images/shadow.png'
                    border: 18, 18, 18, 18
                    pos: [xy - dp(15) for xy in self.pos]
                    size: [wh + dp(30) for wh in self.size]
                Color:
                Rectangle:
                    pos: self.pos
                    size: self.size

            StyledLabel:
                bold: True
                color: rgba('#000000')
                font_size: sp(20)
                halign: 'center'
                text: 'add a meeting :'.upper()
                text_size: self.width, None

            FloatLayout:
                size_hint_y: 3

                RecycleView:
                    id: recycleview
                    data: root.data
                    viewclass: 'InputLine'
                    bar_color: rgba('#128fbd')
                    bar_width: dp(5)
                    pos_hint: {'center': (.5, .5)}

                    RecycleBoxLayout:
                        id: data_container
                        default_size: None, dp(self.parent.height / 7.5)
                        default_size_hint: 1, None
                        size_hint_y: None
                        height: self.minimum_height
                        orientation: 'vertical'
                        spacing: dp(self.parent.height / 25)
                        padding: dp(30), 0

                Widget:
                    pos_hint: {'y': 0}
                    size_hint_y: None
                    height: dp(50)
                    opacity: abs(recycleview.scroll_y)

                    canvas.after:
                        Color:
                        Rectangle:
                            source: 'data/images/white_gradient.png'
                            size: self.size
                            pos: self.pos

                Widget:
                    pos_hint: {'top': 1}
                    size_hint_y: None
                    height: dp(50)
                    opacity: abs(1 - recycleview.scroll_y)

                    canvas.before:
                        PushMatrix:
                        Rotate:
                            angle: 180
                            origin: self.center

                    canvas.after:
                        Color:
                        Rectangle:
                            source: 'data/images/white_gradient.png'
                            size: self.size
                            pos: self.pos
                        PopMatrix:


            Widget:
                size_hint_y: .2

            BoxLayout:
                spacing: dp(15)
                pos_hint: {'center_x': .5}
                size_hint: None, None
                size: self.minimum_size

                SubmitButton:
                    text: 'add event'.upper()
                    on_release: root.add_meeting()

                SubmitButton:
                    text: 'cancel'.upper()
                    on_release: root.dismiss()


<InputLine@BoxLayout>:
    text: textinput.text
    spinner_option: spinner.text
    title: ''
    textinput: True
    values: []
    multiline: False

    StyledLabel:
        text: (root.title).upper()
        font_size: sp(16)
        color: rgba('#000000')

    StyledTextInput:
        id: textinput
        multiline: root.multiline
        opacity: 1 if root.textinput else 0
        disabled: False if root.textinput else True
        pos_hint: {'center_y': .5}
        size_hint: (1 if root.textinput else .001), None
        height: self.font_size * 1.6 if not root.multiline else self.font_size * 5

    StyledSpinner:
        id: spinner
        values: root.values
        opacity: 1 if not root.textinput else 0
        disabled: False if not root.textinput else True
        pos_hint: {'center_y': .5}
        size_hint: (1 if not root.textinput else .001), None
        height: self.font_size * 1.6


<EventInfoPopup>:
    container: container

    canvas:
        Clear:

    FloatLayout:
        BoxLayout:
            id: container
            orientation: 'vertical'
            pos_hint: {'center': (.5, .5)}
            size_hint: .8, .8

            canvas.before:
                Color:
                Rectangle:
                    pos: self.pos
                    size: self.size

<EventItemBox>:
    title: ''
    content: ''

    StyledLabel:
        text: '{}:'.format(root.title)
        color: 0, 0, 0, 1
        bold: True

    StyledLabel:
        text: root.content
        color: 0, 0, 0, 1

<LocationMarker>:
    size_hint: None, None
    size: dp(50), dp(50)

    canvas:
        Clear:

    Image:
        source: 'data/images/location_marker.png'
        pos_hint: {'center': (.5, .5)}
        size_hint: None, None
        size: self.parent.size

    Image:
        source: 'data/images/location_marker_shadow.png'
        pos_hint: {'center': (.5, .5)}
        size_hint: None, None
        size: self.parent.size
        opacity: abs(cos(2 * app.time))
